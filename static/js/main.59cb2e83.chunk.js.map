{"version":3,"sources":["BooksAPI.js","components/Shelf.js","components/Search.js","components/Shelves.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Shelf","moveBook","_callee","e","result","regenerator_default","a","wrap","_context","prev","next","_this","props","target","value","sent","updateShelf","updateUI","t0","stop","this","react_default","createElement","className","style","width","height","backgroundImage","hasOwnProperty","imageLinks","thumbnail","onChange","disabled","title","author","Component","Search","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSearch","_ref","asyncToGenerator","mark","trim","setState","error","console","log","_x","apply","arguments","state","_this2","verifiedBooks","searchBooks","length","map","mainBooks","forEach","bookOnShelf","onClick","updateSearchPage","type","placeholder","components_Shelf","key","Shelves","_this$props","currentlyReading","wantToRead","read","BooksApp","showSearchPage","filter","b","filterBooks","allShelfs","find","bookID","components_Search","components_Shelves","React","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.59cb2e83.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import React, { Component } from \"react\";\nimport { update } from \"../BooksAPI\";\nclass Shelf extends Component {\n  //Change book shelf in UI and API when change shelf\n  moveBook = async (e) => {\n    try {\n      const book = this.props.book;\n      const shelf = e.target.value;\n      //Change API shelf \n      const result = await update(book, shelf);\n      this.props.updateShelf(book, shelf, result);\n      this.props.updateUI(book);\n    } catch (e) {}\n  };\n  render() {\n    const { book } = this.props;\n    return (\n      <li>\n        <div className='book'>\n          <div className='book-top'>\n            <div\n              className='book-cover'\n              style={{\n                width: 128,\n                height: 188,\n                backgroundImage: `url(${\n                  book.hasOwnProperty(\"imageLinks\")\n                    ? book.imageLinks.thumbnail\n                    : \"\"\n                })`,\n              }}></div>\n            <div className='book-shelf-changer'>\n              <select\n                value={book.shelf == null ? \"none\" : book.shelf}\n                onChange={this.moveBook}>\n                <option value='move' disabled>\n                  Move to...\n                </option>\n                <option value='currentlyReading'>Currently Reading</option>\n                <option value='wantToRead'>Want to Read</option>\n                <option value='read'>Read</option>\n                <option value='none'>None</option>\n              </select>\n            </div>\n          </div>\n          <div className='book-title'>\n            {book.hasOwnProperty(\"title\") ? book.title : \"\"}\n          </div>\n          <div className='book-authors'>\n            {book.hasOwnProperty(\"author\") ? book.author : \"\"}\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\nexport default Shelf;\n","import React, { Component } from \"react\";\nimport { search } from \"../BooksAPI\";\nimport Shelf from \"./Shelf\";\nclass Search extends Component {\n  constructor() {\n    super();\n    this.state = {\n      books: [],\n      query: \"\",\n    };\n  }\n  //Update UI when search\n  handleSearch = async (e) => {\n    try {\n      const query = e.target.value;\n      if (query.trim()) {\n        this.setState({ query });\n        //Update API when search \n        const result = await search(query);\n\n        if (result.error) {\n          this.setState({ books: [] });\n        } else {\n          this.setState({ books: result });\n        }\n      } else {\n        this.setState({ books: [] });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  render() {\n    //Filter Books when search by entered index\n    let verifiedBooks = [];\n    const searchBooks = this.state.books;\n    if (searchBooks.length > 0) {\n      verifiedBooks = searchBooks.map((book) => {\n        this.props.mainBooks.forEach((bookOnShelf) => {\n          if (book.id === bookOnShelf.id) {\n            book.shelf = bookOnShelf.shelf;\n          }\n        });\n        return book;\n      });\n    }\n    return (\n      <div className='search-books'>\n        <div className='search-books-bar'>\n          <button\n            className='close-search'\n            value={this.state.query}\n            onClick={this.props.updateSearchPage}>\n            Close\n          </button>\n          <div className='search-books-input-wrapper'>\n            <input\n              type='text'\n              onChange={this.handleSearch}\n              placeholder='Search by title or author'\n            />\n          </div>\n        </div>\n        <div className='search-books-results'>\n          <ol className='books-grid'>\n            {verifiedBooks.map((book) => (\n              <Shelf\n                updateUI={this.props.updateUI}\n                book={book}\n                key={book.id}\n                updateShelf={this.props.updateShelf}\n              />\n            ))}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Search;\n","import React, { Component } from \"react\";\nimport Shelf from \"./Shelf\";\nclass Shelves extends Component {\n  render() {\n    const { currentlyReading, wantToRead, read } = this.props;\n    return (\n      <div>\n        <div className='bookshelf'>\n          <h2 className='bookshelf-title'>Currently Reading</h2>\n          <div className='bookshelf-books'>\n            <ol className='books-grid'>\n              {currentlyReading.map((book) => (\n                <Shelf\n                  updateUI={this.props.updateUI}\n                  book={book}\n                  key={book.id}\n                  updateShelf={this.props.updateShelf}\n                />\n              ))}\n            </ol>\n          </div>\n        </div>\n        <div className='bookshelf'>\n          <h2 className='bookshelf-title'>Want to Read</h2>\n          <div className='bookshelf-books'>\n            <ol className='books-grid'>\n              {wantToRead.map((book) => (\n                <Shelf\n                  updateUI={this.props.updateUI}\n                  updateShelf={this.props.updateShelf}\n                  book={book}\n                  key={book.id}\n                />\n              ))}\n            </ol>\n          </div>\n        </div>\n        <div className='bookshelf'>\n          <h2 className='bookshelf-title'>Read</h2>\n          <div className='bookshelf-books'>\n            <ol className='books-grid'>\n              {read.map((book) => (\n                <Shelf\n                  updateUI={this.props.updateUI}\n                  book={book}\n                  key={book.id}\n                  updateShelf={this.props.updateShelf}\n                />\n              ))}\n            </ol>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Shelves;\n","import React from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport \"./App.css\";\nimport Search from \"./components/Search\";\nimport Shelves from \"./components/Shelves\";\nclass BooksApp extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showSearchPage: false,\n      updateSearchPage: () => this.setState({ showSearchPage: false }),\n      books: [],\n      currentlyReading: [],\n      wantToRead: [],\n      read: [],\n      //change book shelf on UI\n      updateUI: (book) => {\n        this.setState((state) => ({\n          books: state.books.filter((b) => b.id !== book.id).concat([book]),\n        }));\n        this.state.filterBooks(this.state.books);\n      },\n      //filter books to thier shelf on UI function\n      filterBooks: (books) => {\n        this.setState({ books: books });\n        const currentlyReading = this.state.books.filter(\n          (book) => book.shelf === \"currentlyReading\"\n        );\n        const wantToRead = books.filter((book) => book.shelf === \"wantToRead\");\n        const read = books.filter((book) => book.shelf === \"read\");\n        this.setState({\n          currentlyReading: currentlyReading,\n          wantToRead: wantToRead,\n          read: read,\n        });\n      },\n      //change shelf on the API\n      updateShelf: (book, shelf, allShelfs) => {\n        this.state.books.map((b) => {\n          if (shelf === \"none\") {\n            if (b.id === book.id) {\n              b.shelf = shelf;\n            }\n          } else {\n            const getID = allShelfs[shelf].find((bookID) => bookID === b.id);\n            if (getID) {\n              b.shelf = shelf;\n            }\n          }\n          return b;\n        });\n      },\n    };\n  }\n  async componentDidMount() {\n    try {\n      //get books data from API request\n      const books = await BooksAPI.getAll();\n      //map each book to his shelf\n      this.state.filterBooks(books);\n    } catch (err) {}\n  }\n  render() {\n    return (\n      <div className='app'>\n        {this.state.showSearchPage ? (\n          <Search\n            mainBooks={this.state.books}\n            updateShelf={this.state.updateShelf}\n            updateSearchPage={this.state.updateSearchPage}\n            updateUI={this.state.updateUI}\n          />\n        ) : (\n          <div className='list-books'>\n            <div className='list-books-title'>\n              <h1>MyReads</h1>\n            </div>\n            <div className='list-books-content'>\n              <Shelves\n                updateUI={this.state.updateUI}\n                updateShelf={this.state.updateShelf}\n                books={this.state.books}\n                currentlyReading={this.state.currentlyReading}\n                wantToRead={this.state.wantToRead}\n                read={this.state.read}\n              />\n            </div>\n            <div className='open-search'>\n              <button onClick={() => this.setState({ showSearchPage: true })}>\n                Add a book\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}